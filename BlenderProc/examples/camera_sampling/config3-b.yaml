# Args: <obj_file> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/blender/",
    "pip": [
      "h5py"
    ]
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config": {
        "global": {
          "output_dir": "<args:3>",
          "sys_paths": ["<args:2>"] # path to the bop toolkit
        }
      }
    },
    {
      "module": "loader.BopLoader",
      "config": {
        "bop_dataset_path": "<args:0>/<args:1>",
        "mm2m": True,
        "split": "val",
        "obj_ids": [1],
        "model_type": ""
      }
    },
    {
      "module": "lighting.LightLoader",
      "config": {
        "lights": [
          {
            "type": "POINT",
#            "color": [0, 0, 255], # blue
#            "color": [255, 0, 0], # red
            "location": [-5, 5, 5],
            "energy": 1 # 2000 for white
          }
        ]
      }
    },
#    {
#      "module": "lighting.LightLoader",
#      "config": {
#        "lights": [
#          {
#            "type": "POINT",
##            "color": [0, 0, 255], # blue
##            "color": [255, 0, 0], # red
#            "location": [ 5, 5, 5 ],
#            "energy": 2000
#          }
#        ]
#      }
#    },
#    {
#      "module": "lighting.LightLoader",
#      "config": {
#        "lights": [
#          {
#            "type": "POINT",
##            "color": [0, 0, 255], # blue
##            "color": [255, 0, 0], # red
#            "location": [ -5, -5, 5 ],
#            "energy": 2000
#          }
#        ]
#      }
#    },

    {
      "module": "camera.CameraSampler",
      "config": {
        "intrinsics": {
          "fov": 120,
          "resolution_x": 400,
          "resolution_y": 400
        },
        "output_key": "pose",
        "cam_poses": [
          {
            "number_of_samples": 300,
            "location": {
              "provider": "sampler.Shell",
              "center": [ 0, 0, 0 ],
              "radius_min": 1,
              "radius_max": 1.01,
              "elevation_min": 0, # smaller is better
              "elevation_max": 45,
              "uniform_elevation": True
            },
            "rotation": {
              "format": "look_at",
              "value": {
                "provider": "getter.POI",
                "selector": {
                  "provider": "getter.Entity",
                  "conditions": {
                    "type": "MESH",
                    "cp_bop_dataset_name": "<args:1>",
                  },
                  "random_samples": 200
                }
              },
              "inplane_rot": {
                "provider": "sampler.Value",
                "type": "float",
                "min": -0.7854,
                "max": 0.7854
              }
            }
#                "location": {
#                  "provider": "sampler.Shell",
#                  "center": [0, 0, 0],
#                  "radius_min": 1,
#                  "radius_max": 1.5,
#                  "elevation_min": 0, # need to fix as 0
#                  "elevation_max": 89
#                },
##            "location": {
##              "provider": "sampler.Uniform3d",
##              "max": [ 2, 1, 1 ],
##              "min": [ -2, -1, 2 ]
##            },
#                "rotation": {
#                  "format": "look_at",
#                  "value": {
#                    "provider": "getter.POI",
#                    "parameters": {}
#              },
#              "inplane_rot": {
#                "provider": "sampler.Value",
#                "type": "float",
#                "min": -0.7854,
#                "max": 0.7854
#              }
#            }
          }
        ]
      }
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "output_key": "colors",
        "samples": 350,
        "render_normals": True,
        "render_distance": True,
        "use_alpha":True, # RGBA
        "transparent_background": True,
      }
    },
    {
      "module": "writer.Hdf5Writer",
    },
    {
      "module": "writer.BopWriter",
      "config": {
        "dataset": "<args:1>",
        "write_alpha_channel":True, # RGBA
        "append_to_existing_output": True,
        "depth_scale": 1.0,
        "postprocessing_modules": {
          "distance": [
            { "module": "postprocessing.Dist2Depth" }
          ]
        }
      }
    }
  ]
}

